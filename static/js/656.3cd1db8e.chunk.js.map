{"version":3,"file":"static/js/656.3cd1db8e.chunk.js","mappings":"mTAEMA,E,MAAMC,GAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAI,gBAAiB,CAC1CG,OAAQ,CACNG,MAAAA,KAHyB,cACvBC,EADuB,gBAMVA,EAASC,KAAKC,QANJ,cAMvBD,EANuB,OAO7BE,QAAQC,IAAIH,GAPiB,kBAQtBA,GARsB,2CAAH,sDAWfI,EAAW,mCAAG,sGACFZ,EAAI,uBADF,cACnBO,EADmB,gBAENA,EAASC,KAFH,cAEnBA,EAFmB,yBAIlBA,GAJkB,2CAAH,qDAOXK,EAAW,mCAAG,WAAMC,GAAN,yFACFd,EAAI,SAAD,OAAUc,IADX,cACnBP,EADmB,gBAENA,EAASC,KAFH,cAEnBA,EAFmB,yBAIlBA,GAJkB,2CAAH,sDAOXO,EAAO,mCAAG,WAAMD,GAAN,yFACEd,EAAI,SAAD,OAAUc,EAAV,aADL,cACfP,EADe,gBAEFA,EAASC,KAFP,cAEfA,EAFe,yBAIdA,EAAKQ,MAJS,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,yFACDd,EAAI,SAAD,OAAUc,EAAV,aADF,cAClBP,EADkB,gBAELA,EAASC,KAFJ,cAElBA,EAFkB,yBAIjBA,EAAKC,SAJY,2CAAH,qD,yHCvCVS,EAAmB,SAAAC,GAAM,OACpCA,GAAUA,EAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,KADL,E,UCDtC,GAAiB,E,SC2DjB,MArDA,YAA4B,IFPSC,EEOnBC,EAAS,EAATA,MACRC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,SAAUC,EAC3CJ,EAD2CI,MAAOC,EAClDL,EADkDK,aAAcX,EAChEM,EADgEN,OAE5DY,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAsC,GAAfR,GAAmBS,QAAQ,GAExD,OACE,iCACE,mBACEC,UAAWC,EAAAA,OACXC,QAAS,wBAAMN,EAAQ,UAACF,EAASS,aAAV,QAAmB,IAAjC,EAFX,sBAMA,4BACE,gBACEC,IACEf,EAAW,0CAC4BA,GACnCgB,EAENC,IAAG,UAAKd,MAEV,4BACE,kCAAQA,EAAR,cFjC2BL,EEiCaM,EFjCLN,GAAQA,EAAKoB,MAAM,KAAK,IEiC3D,QACA,0BACE,2CADF,IAC6BT,EAD7B,QAGA,0BACE,yCADF,IAC2BP,MAE3B,0BACE,qCADF,IACuBV,EAAiBC,cAMjD,E,SC7BD,MAfA,SAAmB0B,GACjB,IAAMd,GAAWC,EAAAA,EAAAA,MACjB,OACE,4BACE,oDACA,SAAC,KAAD,CAASc,GAAG,OAAON,MAAOT,EAASS,MAAnC,mBAGA,SAAC,KAAD,CAASM,GAAG,UAAUN,MAAOT,EAASS,MAAtC,uBAKL,ECeD,MAxBA,SAAsBK,GACpB,OAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KAEQnC,GAAOoC,EAAAA,EAAAA,MAAPpC,GAUR,OARAqC,EAAAA,EAAAA,YAAU,YACRtC,EAAAA,EAAAA,IAAYC,GACTsC,MAAK,SAAAC,GACJJ,EAAQI,EACT,IACAC,OAAM,SAAAC,GAAK,OAAI7C,QAAQC,IAAI4C,EAAhB,GACf,GAAE,CAACzC,KAGF,+BACGkC,IAAQ,SAAC,EAAD,CAAQvB,MAAOuB,IACvBA,IAAQ,SAAC,EAAD,KACT,SAAC,EAAAQ,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/api.js","helper/helper.js","components/Movies/Movies.moduls.css","components/Movies/Movies.jsx","components/MovieInfo/MovieInfo.jsx","page/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '82c59d753050746a09d77670604a0453',\n  },\n});\n\nexport const getSearchMovies = async query => {\n  const response = await API(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  const data = await response.data.results;\n  console.log(data);\n  return data;\n};\n\nexport const getTrending = async () => {\n  const response = await API(`trending/movie/week`);\n  const data = await response.data;\n  // console.log(data);\n  return data;\n};\n\nexport const getOneMovie = async id => {\n  const response = await API(`movie/${id}`);\n  const data = await response.data;\n  // console.log(data);\n  return data;\n};\n\nexport const getCast = async id => {\n  const response = await API(`movie/${id}/credits`);\n  const data = await response.data;\n  // console.log(data);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const response = await API(`movie/${id}/reviews`);\n  const data = await response.data;\n  // console.log(data);\n  return data.results;\n};\n","export const normalizedYearOfMovie = date => date && date.split('-')[0];\n\nexport const normolizedGenres = genres =>\n  genres && genres.map(el => el.name).join(', ');\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { normalizedYearOfMovie, normolizedGenres } from '../../helper/helper';\nimport placeholder from '../../imeges/posterholder.jpg';\nimport s from './Movies.moduls.css';\n\nfunction Movies({ movie }) {\n  const { poster_path, vote_average, overview, title, release_date, genres } =\n    movie;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const normalizedUserScore = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <button\n        className={s.button}\n        onClick={() => navigate(location.state ?? '/')}\n      >\n        Go back\n      </button>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : placeholder\n          }\n          alt={`${title}`}\n        />\n        <div>\n          <h2>{`${title} (${normalizedYearOfMovie(release_date)})`}</h2>\n          <p>\n            <span>User score: </span> {normalizedUserScore}%\n          </p>\n          <p>\n            <span>Overview: </span> {overview}\n          </p>\n          <p>\n            <span>Genes:</span> {normolizedGenres(genres)}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nMovies.propTypes = {\n  info: PropTypes.shape({\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    original_title: PropTypes.string,\n  }),\n};\n\nexport default Movies;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nfunction MovieInfo(props) {\n  const location = useLocation();\n  return (\n    <div>\n      <h3>Additional information</h3>\n      <NavLink to=\"cast\" state={location.state}>\n        Cast\n      </NavLink>\n      <NavLink to=\"reviews\" state={location.state}>\n        Reviews\n      </NavLink>\n    </div>\n  );\n}\n\nexport default MovieInfo;\n","import { useParams, Outlet } from 'react-router-dom';\nimport { getOneMovie } from '../api/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport Loader from '../components/Loader/Loader';\nimport Movies from '../components/Movies/Movies';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\nfunction MovieDetails(props) {\n  const [film, setFilm] = useState({});\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getOneMovie(id)\n      .then(res => {\n        setFilm(res);\n      })\n      .catch(error => console.log(error));\n  }, [id]);\n\n  return (\n    <section>\n      {film && <Movies movie={film} />}\n      {film && <MovieInfo />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["API","axios","baseURL","params","api_key","getSearchMovies","query","response","data","results","console","log","getTrending","getOneMovie","id","getCast","cast","getReviews","normolizedGenres","genres","map","el","name","join","date","movie","poster_path","vote_average","overview","title","release_date","location","useLocation","navigate","useNavigate","normalizedUserScore","toFixed","className","s","onClick","state","src","placeholder","alt","split","props","to","useState","film","setFilm","useParams","useEffect","then","res","catch","error","Suspense","fallback","Loader"],"sourceRoot":""}