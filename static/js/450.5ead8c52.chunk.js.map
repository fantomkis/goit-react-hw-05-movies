{"version":3,"file":"static/js/450.5ead8c52.chunk.js","mappings":"6LAEaA,EAAmB,SAAAC,GAAM,OACpCA,GAAUA,EAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,KADL,E,UCDtC,GAAiB,E,SC2DjB,MArDA,YAA4B,IFPSC,EEOnBC,EAAS,EAATA,MACRC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,SAAUC,EAC3CJ,EAD2CI,MAAOC,EAClDL,EADkDK,aAAcX,EAChEM,EADgEN,OAE5DY,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAsC,GAAfR,GAAmBS,QAAQ,GAExD,OACE,iCACE,mBACEC,UAAWC,EAAAA,OACXC,QAAS,wBAAMN,EAAQ,UAACF,EAASS,aAAV,QAAmB,IAAjC,EAFX,sBAMA,4BACE,gBACEC,IACEf,EAAW,0CAC4BA,GACnCgB,EAENC,IAAG,UAAKd,MAEV,4BACE,kCAAQA,EAAR,cFjC2BL,EEiCaM,EFjCLN,GAAQA,EAAKoB,MAAM,KAAK,IEiC3D,QACA,0BACE,2CADF,IAC6BT,EAD7B,QAGA,0BACE,yCADF,IAC2BP,MAE3B,0BACE,qCADF,IACuBV,EAAiBC,cAMjD,C,oDCtCD,UARmB,WACjB,OACE,+BACE,SAAC,IAAD,KAGL,C","sources":["helper/helper.js","components/Movies/Movies.moduls.css","components/Movies/Movies.jsx","page/MuviesPage.jsx"],"sourcesContent":["export const normalizedYearOfMovie = date => date && date.split('-')[0];\n\nexport const normolizedGenres = genres =>\n  genres && genres.map(el => el.name).join(', ');\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { normalizedYearOfMovie, normolizedGenres } from '../../helper/helper';\nimport placeholder from '../../imeges/posterholder.jpg';\nimport s from './Movies.moduls.css';\n\nfunction Movies({ movie }) {\n  const { poster_path, vote_average, overview, title, release_date, genres } =\n    movie;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const normalizedUserScore = (vote_average * 10).toFixed(0);\n\n  return (\n    <>\n      <button\n        className={s.button}\n        onClick={() => navigate(location.state ?? '/')}\n      >\n        Go back\n      </button>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : placeholder\n          }\n          alt={`${title}`}\n        />\n        <div>\n          <h2>{`${title} (${normalizedYearOfMovie(release_date)})`}</h2>\n          <p>\n            <span>User score: </span> {normalizedUserScore}%\n          </p>\n          <p>\n            <span>Overview: </span> {overview}\n          </p>\n          <p>\n            <span>Genes:</span> {normolizedGenres(genres)}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nMovies.propTypes = {\n  info: PropTypes.shape({\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    original_title: PropTypes.string,\n  }),\n};\n\nexport default Movies;\n","import Movies from '../components/Movies/Movies';\nconst MuviesPage = () => {\n  return (\n    <>\n      <Movies />\n    </>\n  );\n};\n\nexport default MuviesPage;\n"],"names":["normolizedGenres","genres","map","el","name","join","date","movie","poster_path","vote_average","overview","title","release_date","location","useLocation","navigate","useNavigate","normalizedUserScore","toFixed","className","s","onClick","state","src","placeholder","alt","split"],"sourceRoot":""}